{
  "swagger": "2.0",
  "info": {
    "title": "ep-micro-admin",
    "description": "API Swagger for ep-micro-admin",
    "version": "1.0.0"
  },
  "host": "localhost:5003",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/v1/admin/roles/list": {
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "List Roles",
        "description": "Endpoint to retrieve Roles List",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "is_active": {
                  "type": "boolean",
                  "example": true
                },
                "page_size": {
                  "type": "number",
                  "example": 50
                },
                "current_page": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/roles/add": {
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Add Role",
        "description": "Endpoint to create Role",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "role_name": {
                  "type": "string",
                  "example": "Department Head"
                },
                "role_description": {
                  "type": "string",
                  "example": "Head of the Department"
                },
                "permissions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "menu_id": {
                        "type": "number",
                        "example": 1
                      },
                      "permission_id": {
                        "type": "number",
                        "example": 2
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/roles/update": {
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Update Role",
        "description": "Endpoint to update Role",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "role_id": {
                  "type": "number",
                  "example": 2
                },
                "role_name": {
                  "type": "string",
                  "example": "Department Head"
                },
                "role_description": {
                  "type": "string",
                  "example": "Head of the Department"
                },
                "status": {
                  "type": "number",
                  "example": 1
                },
                "permissions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "menu_id": {
                        "type": "number",
                        "example": 1
                      },
                      "permission_id": {
                        "type": "number",
                        "example": 2
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/roles/menusList": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get Menu List",
        "description": "Endpoint to retrieve Menu List",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "isActive",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/roles/defaultAccessList": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get Default Access List",
        "description": "Endpoint to retrieve Default Access List",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/roles/{roleId}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get Role",
        "description": "Endpoint to retrieve Role Information",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/roles/updateStatus": {
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Update Role Status",
        "description": "Endpoint to update Role Status",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "role_id": {
                  "type": "number",
                  "example": 2
                },
                "status": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/roles/accessList/{roleId}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get Access List By Role Id",
        "description": "Endpoint to retrieve Access List with Role Id",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/passwordPolicies/list": {
      "get": {
        "tags": [
          "Password Policies"
        ],
        "summary": "List Password Policies",
        "description": "Endpoint to List Password Policies",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/passwordPolicies/add": {
      "post": {
        "tags": [
          "Password Policies"
        ],
        "summary": "Add Password Policy",
        "description": "Endpoint to Add Password Policy",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password_expiry": {
                  "type": "number",
                  "example": 10
                },
                "password_history": {
                  "type": "number",
                  "example": 10
                },
                "minimum_password_length": {
                  "type": "number",
                  "example": 8
                },
                "complexity": {
                  "type": "number",
                  "example": 3
                },
                "alphabetical": {
                  "type": "number",
                  "example": 1
                },
                "numeric": {
                  "type": "number",
                  "example": 1
                },
                "special_characters": {
                  "type": "number",
                  "example": 1
                },
                "allowed_special_characters": {
                  "type": "string",
                  "example": "!@#$%^&*()"
                },
                "maximum_invalid_attempts": {
                  "type": "number",
                  "example": 5
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/passwordPolicies/update": {
      "post": {
        "tags": [
          "Password Policies"
        ],
        "summary": "Update Password Policy",
        "description": "Endpoint to Update Password Policy",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "password_expiry": {
                  "type": "number",
                  "example": 10
                },
                "password_history": {
                  "type": "number",
                  "example": 10
                },
                "minimum_password_length": {
                  "type": "number",
                  "example": 8
                },
                "complexity": {
                  "type": "number",
                  "example": 3
                },
                "alphabetical": {
                  "type": "number",
                  "example": 1
                },
                "numeric": {
                  "type": "number",
                  "example": 1
                },
                "special_characters": {
                  "type": "number",
                  "example": 1
                },
                "allowed_special_characters": {
                  "type": "string",
                  "example": "!@#$%^&*()"
                },
                "maximum_invalid_attempts": {
                  "type": "number",
                  "example": 5
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/passwordPolicies/{passwordPolicyId}": {
      "get": {
        "tags": [
          "Password Policies"
        ],
        "summary": "Get Password Policy",
        "description": "Endpoint to Get Password Policy",
        "parameters": [
          {
            "name": "passwordPolicyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/users/create": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add User",
        "description": "Endpoint to Add User",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "type": "string",
                  "example": "Narsima"
                },
                "last_name": {
                  "type": "string",
                  "example": "Chilkuri"
                },
                "email_id": {
                  "type": "string",
                  "example": "narsimachilkuri237@gmail.com"
                },
                "mobile_number": {
                  "type": "string",
                  "example": "8169104556"
                },
                "dob": {
                  "type": "string",
                  "example": "1997-08-16"
                },
                "gender": {
                  "type": "number",
                  "example": 1
                },
                "role_id": {
                  "type": "number",
                  "example": 2
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/users/update": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Update User",
        "description": "Endpoint to Update User",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "string",
                  "example": "encryptedHash"
                },
                "first_name": {
                  "type": "string",
                  "example": "Narsima"
                },
                "last_name": {
                  "type": "string",
                  "example": "Chilkuri"
                },
                "email_id": {
                  "type": "string",
                  "example": "narsimachilkuri237@gmail.com"
                },
                "mobile_number": {
                  "type": "string",
                  "example": "8169104556"
                },
                "dob": {
                  "type": "string",
                  "example": "1997-08-16"
                },
                "gender": {
                  "type": "number",
                  "example": 1
                },
                "role_id": {
                  "type": "number",
                  "example": 2
                },
                "status": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User",
        "description": "Endpoint to Retrieve User Information By User Id",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/users/list/{roleId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List Users",
        "description": "Endpoint to Retrieve Users List By Role Id",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/users/list": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "List Users",
        "description": "Endpoint to Retrieve Users List",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "page_size": {
                  "type": "number",
                  "example": 50
                },
                "current_page": {
                  "type": "number",
                  "example": 1
                },
                "search_query": {
                  "type": "string",
                  "example": "8169104556"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/users/resetPassword/{userId}": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Reset User Password",
        "description": "Endpoint to Reset User Password",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/users/updateStatus": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Update User Status",
        "description": "Update User Status by User Id and Status",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "string",
                  "example": "encryptedHash"
                },
                "status": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/categories/add": {
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Create Category",
        "description": "Endpoint to Create Category",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "category_name": {
                  "type": "string",
                  "example": "Technology"
                },
                "category_description": {
                  "type": "string",
                  "example": "Category for tech-related content"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/categories/update": {
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Update Category",
        "description": "Endpoint to Update Category",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "category_id": {
                  "type": "number",
                  "example": 2
                },
                "category_name": {
                  "type": "string",
                  "example": "Technology"
                },
                "category_description": {
                  "type": "string",
                  "example": "Updated description"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/categories/updateStatus": {
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Update Category Status",
        "description": "Endpoint to Update Category Status",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "category_id": {
                  "type": "number",
                  "example": 2
                },
                "status": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/categories/list": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "List Categories",
        "description": "Endpoint to List Categories with pagination",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "pageSize",
            "in": "query",
            "type": "string"
          },
          {
            "name": "currentPage",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/categories/{categoryId}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get Category",
        "description": "Endpoint to Get Category",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/menus/add": {
      "post": {
        "tags": [
          "Menus"
        ],
        "summary": "Create Menu",
        "description": "Endpoint to Create Menu",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "menu_name": {
                  "type": "string",
                  "example": "Categories"
                },
                "menu_description": {
                  "type": "string",
                  "example": "Menu to manage categories"
                },
                "parent_menu_id": {
                  "type": "number",
                  "example": 1
                },
                "menu_order": {
                  "type": "number",
                  "example": 1
                },
                "route_url": {
                  "type": "string",
                  "example": "/categories"
                },
                "icon_class": {
                  "type": "string",
                  "example": "fa fa-menu"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/menus/update": {
      "post": {
        "tags": [
          "Menus"
        ],
        "summary": "Update Menu",
        "description": "Endpoint to Update Menu",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "menu_id": {
                  "type": "number",
                  "example": 2
                },
                "menu_name": {
                  "type": "string",
                  "example": "Categories"
                },
                "menu_description": {
                  "type": "string",
                  "example": "Menu to manage categories"
                },
                "parent_menu_id": {
                  "type": "number",
                  "example": 1
                },
                "menu_order": {
                  "type": "number",
                  "example": 1
                },
                "route_url": {
                  "type": "string",
                  "example": "/categories"
                },
                "icon_class": {
                  "type": "string",
                  "example": "fa fa-menu"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/menus/updateStatus": {
      "post": {
        "tags": [
          "Menus"
        ],
        "summary": "Update Menu Status",
        "description": "Endpoint to Update Menu Status",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "menu_id": {
                  "type": "number",
                  "example": 2
                },
                "status": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/menus/list": {
      "get": {
        "tags": [
          "Menus"
        ],
        "summary": "List Menus",
        "description": "Endpoint to List Menus",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/menus/{menuId}": {
      "get": {
        "tags": [
          "Menus"
        ],
        "summary": "Get Menu",
        "description": "Endpoint to Get Menu",
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/events/add": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Create Event",
        "description": "Endpoint to Create Event",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "eventName": {
                  "type": "string",
                  "example": "Tech Conference"
                },
                "eventDescription": {
                  "type": "string",
                  "example": "Tech Conference on Cloud Native"
                },
                "startTime": {
                  "type": "string",
                  "example": "2024-09-01T09:00:00Z"
                },
                "endTime": {
                  "type": "string",
                  "example": "2024-09-01T17:00:00Z"
                },
                "categoryId": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/events/update": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Update Event",
        "description": "Endpoint to Update Event",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "eventId": {
                  "type": "string",
                  "example": "E1"
                },
                "eventName": {
                  "type": "string",
                  "example": "Updated Tech Conference"
                },
                "eventDescription": {
                  "type": "string",
                  "example": "Updated Tech Conference on Cloud Native"
                },
                "startTime": {
                  "type": "string",
                  "example": "2024-09-01T10:00:00Z"
                },
                "endTime": {
                  "type": "string",
                  "example": "2024-09-01T18:00:00Z"
                },
                "categoryId": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/events/updateStatus": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Update Event Status",
        "description": "Endpoint to Update Event Status",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "eventId": {
                  "type": "string",
                  "example": "E1"
                },
                "status": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/events/list": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "List Events",
        "description": "Endpoint to List Events with pagination",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "pageSize",
            "in": "query",
            "type": "string"
          },
          {
            "name": "currentPage",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/events/listByCategory/{categoryId}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get Event By Category Id",
        "description": "Endpoint to Get Event By Category Id",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/events/{eventId}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get Event",
        "description": "Endpoint to Get Event",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/judges/add": {
      "post": {
        "tags": [
          "Judges"
        ],
        "summary": "Create Judge",
        "description": "Endpoint to Create Judge",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "judgeName",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Name of the judge"
          },
          {
            "name": "eventId",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Event Id of the judge"
          },
          {
            "name": "designation",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Designation of the judge"
          },
          {
            "name": "file",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": "Profile picture of the judge"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/judges/update": {
      "post": {
        "tags": [
          "Judges"
        ],
        "summary": "Update Judge",
        "description": "Endpoint to Update Judge",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "judgeId",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Id of the judge"
          },
          {
            "name": "judgeName",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Name of the judge"
          },
          {
            "name": "eventId",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Event Id of the judge"
          },
          {
            "name": "designation",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Designation of the judge"
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file",
            "description": "Profile picture of the judge"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/judges/updateStatus": {
      "post": {
        "tags": [
          "Judges"
        ],
        "summary": "Update Judge Status",
        "description": "Endpoint to Update Judge Status",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "judgeId": {
                  "type": "string",
                  "example": "J1"
                },
                "status": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/judges/list": {
      "get": {
        "tags": [
          "Judges"
        ],
        "summary": "List Judges",
        "description": "Endpoint to List Judges with pagination",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "pageSize",
            "in": "query",
            "type": "string"
          },
          {
            "name": "currentPage",
            "in": "query",
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/judges/{judgeId}": {
      "get": {
        "tags": [
          "Judges"
        ],
        "summary": "Get Judge",
        "description": "Endpoint to Get Judge",
        "parameters": [
          {
            "name": "judgeId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/nominations/add": {
      "post": {
        "tags": [
          "Nominations"
        ],
        "summary": "Create Nomination",
        "description": "Endpoint to Create Nomination",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "nomineeName",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Name of the nominee",
            "example": "Jane Doe"
          },
          {
            "name": "selfNominee",
            "in": "formData",
            "required": true,
            "type": "boolean",
            "description": "Whether the nomination is self-nomination",
            "example": false
          },
          {
            "name": "requesterName",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Name of the requester",
            "example": "John Smith"
          },
          {
            "name": "requesterEmail",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Email of the requester",
            "example": "john.smith@example.com"
          },
          {
            "name": "nomineePlatformLinks",
            "in": "formData",
            "required": false,
            "type": "object",
            "description": "Platform links for the nominee",
            "properties": {
              "instagram": {
                "type": "string",
                "description": "Instagram profile link",
                "example": "http://instagram.com/example"
              },
              "tiktok": {
                "type": "string",
                "description": "TikTok profile link",
                "example": "http://tiktok.com/example"
              },
              "twitch": {
                "type": "string",
                "description": "Twitch profile link",
                "example": "http://twitch.com/example"
              },
              "youtube": {
                "type": "string",
                "description": "YouTube profile link",
                "example": "http://youtube.com/example"
              },
              "other": {
                "type": "string",
                "description": "Other platform link",
                "example": "http://other.com/example"
              }
            }
          },
          {
            "name": "eventId",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "ID of the event",
            "example": "E1"
          },
          {
            "name": "file",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": "Profile Picture for the nomination"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/nominations/update": {
      "post": {
        "tags": [
          "Nominations"
        ],
        "summary": "Update Nomination",
        "description": "Endpoint to Update Nomination",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "nomineeId",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Id of the nominee",
            "example": "N1"
          },
          {
            "name": "nomineeName",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Name of the nominee",
            "example": "Jane Doe"
          },
          {
            "name": "selfNominee",
            "in": "formData",
            "required": true,
            "type": "boolean",
            "description": "Whether the nomination is self-nomination",
            "example": false
          },
          {
            "name": "requesterName",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Name of the requester",
            "example": "John Smith"
          },
          {
            "name": "requesterEmail",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Email of the requester",
            "example": "john.smith@example.com"
          },
          {
            "name": "nomineePlatformLinks",
            "in": "formData",
            "required": false,
            "type": "object",
            "description": "Platform links for the nominee",
            "properties": {
              "instagram": {
                "type": "string",
                "description": "Instagram profile link",
                "example": "http://instagram.com/example"
              },
              "tiktok": {
                "type": "string",
                "description": "TikTok profile link",
                "example": "http://tiktok.com/example"
              },
              "twitch": {
                "type": "string",
                "description": "Twitch profile link",
                "example": "http://twitch.com/example"
              },
              "youtube": {
                "type": "string",
                "description": "YouTube profile link",
                "example": "http://youtube.com/example"
              },
              "other": {
                "type": "string",
                "description": "Other platform link",
                "example": "http://other.com/example"
              }
            }
          },
          {
            "name": "eventId",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "ID of the event",
            "example": "E1"
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file",
            "description": "Profile Picture for the nomination"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/nominations/updateStatus": {
      "post": {
        "tags": [
          "Nominations"
        ],
        "summary": "Update Nomination Status",
        "description": "Endpoint to Update Nomination Status",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nomineeId": {
                  "type": "string",
                  "example": "N1"
                },
                "status": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/nominations/list": {
      "get": {
        "tags": [
          "Nominations"
        ],
        "summary": "List Nominations",
        "description": "Endpoint to List Nominations with pagination",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "pageSize",
            "in": "query",
            "type": "string"
          },
          {
            "name": "currentPage",
            "in": "query",
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/nominations/{nomineeId}": {
      "get": {
        "tags": [
          "Nominations"
        ],
        "summary": "Get Nomination",
        "description": "Endpoint to Get a Nomination",
        "parameters": [
          {
            "name": "nomineeId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/votes/list": {
      "get": {
        "tags": [
          "Votes"
        ],
        "summary": "List Votes",
        "description": "Endpoint to List Votes with pagination",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "pageSize": {
                  "type": "number",
                  "example": 10
                },
                "currentPage": {
                  "type": "number",
                  "example": 1
                },
                "eventId": {
                  "type": "string",
                  "example": "E1"
                }
              }
            }
          },
          {
            "name": "in",
            "in": "query",
            "type": "string"
          },
          {
            "name": "required",
            "in": "query",
            "type": "string"
          },
          {
            "name": "schema",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/votes/listByEvent": {
      "get": {
        "tags": [
          "Votes"
        ],
        "summary": "Get Nomination Votes",
        "description": "Endpoint to Get Nomination Votes with pagination",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "pageSize": {
                  "type": "number",
                  "example": 10
                },
                "currentPage": {
                  "type": "number",
                  "example": 1
                },
                "eventId": {
                  "type": "string",
                  "example": "N1"
                }
              }
            }
          },
          {
            "name": "in",
            "in": "query",
            "type": "string"
          },
          {
            "name": "required",
            "in": "query",
            "type": "string"
          },
          {
            "name": "schema",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/supportRequests/updateStatus": {
      "post": {
        "tags": [
          "Support Requests"
        ],
        "summary": "Update Support Request Status",
        "description": "Endpoint to Update Support Request Status",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "supportRequestId": {
                  "type": "string",
                  "example": "S1"
                },
                "status": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/supportRequests/list": {
      "get": {
        "tags": [
          "Support Requests"
        ],
        "summary": "List Support Requests",
        "description": "Endpoint to List Support Requests with pagination and filtering by period",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "pageSize",
            "in": "query",
            "type": "string"
          },
          {
            "name": "currentPage",
            "in": "query",
            "type": "string"
          },
          {
            "name": "periodType",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/notifications/list": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get Notifications",
        "description": "Endpoint to get Notifications",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/notifications/unreadCount": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get Unread Notifications Count",
        "description": "Endpoint to get Unread Notifications Count",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token for authentication"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/health": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Health Check API",
        "description": "Endpoint to health check Admin Service",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    }
  }
}