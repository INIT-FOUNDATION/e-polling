{
  "swagger": "2.0",
  "info": {
    "title": "ep-micro-polling",
    "description": "API Swagger for ep-micro-polling",
    "version": "1.0.0"
  },
  "host": "localhost:5004",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/v1/polling/categories/list": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "List Categories",
        "description": "Endpoint to List Categories with pagination",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/polling/events/listByCategory/{categoryId}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get Event By Category Id",
        "description": "Endpoint to Get Event By Category Id",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/polling/events/listPastClosedEvents": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get Past Closed Events",
        "description": "Endpoint to Get Past Closed Events",
        "parameters": [
          {
            "name": "categoryId",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/polling/nominations/add": {
      "post": {
        "tags": [
          "Nominations"
        ],
        "summary": "Create Nomination",
        "description": "Endpoint to Create Nomination",
        "parameters": [
          {
            "name": "nomineeName",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Name of the nominee",
            "example": "Jane Doe"
          },
          {
            "name": "selfNominee",
            "in": "formData",
            "required": true,
            "type": "boolean",
            "description": "Whether the nomination is self-nomination",
            "example": false
          },
          {
            "name": "requesterName",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Name of the requester",
            "example": "John Smith"
          },
          {
            "name": "requesterEmail",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Email of the requester",
            "example": "john.smith@example.com"
          },
          {
            "name": "nomineePlatformLinks",
            "in": "formData",
            "required": false,
            "type": "object",
            "description": "Platform links for the nominee",
            "properties": {
              "instagram": {
                "type": "string",
                "description": "Instagram profile link",
                "example": "http://instagram.com/example"
              },
              "tiktok": {
                "type": "string",
                "description": "TikTok profile link",
                "example": "http://tiktok.com/example"
              },
              "twitch": {
                "type": "string",
                "description": "Twitch profile link",
                "example": "http://twitch.com/example"
              },
              "youtube": {
                "type": "string",
                "description": "YouTube profile link",
                "example": "http://youtube.com/example"
              },
              "other": {
                "type": "string",
                "description": "Other platform link",
                "example": "http://other.com/example"
              }
            }
          },
          {
            "name": "eventId",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "ID of the event",
            "example": "E1"
          },
          {
            "name": "file",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": "Profile Picture for the nomination"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/polling/nominations/listByEvent/{eventId}": {
      "get": {
        "tags": [
          "Nominations"
        ],
        "summary": "List Nominations By Event",
        "description": "Endpoint to List Nominations By Event",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "params",
            "in": "params",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "eventId": {
                  "type": "string",
                  "example": "E1"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/polling/judges/listByEvent/{eventId}": {
      "get": {
        "tags": [
          "Judges"
        ],
        "summary": "List Judges By Event",
        "description": "Endpoint to List Judges By Event",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "params",
            "in": "params",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "eventId": {
                  "type": "string",
                  "example": "E1"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/polling/votes/health": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Health Check API",
        "description": "Endpoint to health check Admin Service",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/polling/health": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Health Check API",
        "description": "Endpoint to health check Admin Service",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    }
  }
}